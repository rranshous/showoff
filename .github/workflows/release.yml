name: Build and Release VS Code Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install vsce (Visual Studio Code Extension Manager)
      run: npm install -g @vscode/vsce
      
    - name: Compile TypeScript
      run: npm run compile
      
    - name: Update version for manual dispatch
      if: github.event_name == 'workflow_dispatch'
      run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
    - name: Package extension
      run: vsce package
      
    - name: Get package info
      id: package
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "vsix_file=${PACKAGE_NAME}-${PACKAGE_VERSION}.vsix" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', steps.package.outputs.version) || github.ref_name }}
        release_name: ShowOff Extension v${{ steps.package.outputs.version }}
        body: |
          ## ShowOff - Visual Copilot Workspace v${{ steps.package.outputs.version }}
          
          Give Copilot visual canvases, virtual screens, and AI-controlled window management! üé®üñ•Ô∏è
          
          ### Features
          - **Canvas Drawing**: Full-screen canvas with GSAP animations and PIXI.js support
          - **Virtual Screens**: Multiple persistent screens with markdown and canvas types
          - **Window Manager**: AI-controlled layouts with Window Controller Agents (WCAs)
          
          ### Installation
          1. Download the `${{ steps.package.outputs.vsix_file }}` file below
          2. Open VS Code
          3. Run command: `Extensions: Install from VSIX...`
          4. Select the downloaded file
          5. Reload VS Code
          6. Look for ShowOff icons in the activity bar!
          
          ### Tools Available
          - `#draw_canvas` - Draw on full-screen canvas
          - `#virtual_screens` - Manage multiple screens
          - `#window_system` - Control window layouts and deploy WCAs
          
          Enjoy experimenting with visual AI collaboration! üöÄ
        draft: false
        prerelease: false
        
    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package.outputs.vsix_file }}
        asset_name: ${{ steps.package.outputs.vsix_file }}
        asset_content_type: application/zip
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vsix-package
        path: ./${{ steps.package.outputs.vsix_file }}
        retention-days: 30